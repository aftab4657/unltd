# Generated by Django 2.2.1 on 2019-08-01 12:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('categoryname', models.CharField(db_column='CategoryName', max_length=50)),
                ('timerange', models.DateTimeField(db_column='TimeRange')),
                ('creationddate', models.DateTimeField(auto_now=True, db_column='CreatedDate')),
            ],
            options={
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('currency', models.CharField(db_column='Currency', max_length=225)),
            ],
            options={
                'db_table': 'Currency',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(db_column='GroupId', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('itemname', models.CharField(db_column='ItemName', max_length=225)),
                ('description', models.CharField(db_column='Description', max_length=225)),
                ('visible', models.IntegerField(db_column='Visible')),
                ('preparetime', models.IntegerField(db_column='PrepareTime', default=45)),
                ('itemimage', models.CharField(db_column='ItemImage', default=None, max_length=225)),
                ('creationddate', models.DateTimeField(auto_now=True, db_column='CreatedDate')),
            ],
            options={
                'db_table': 'item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('languagename', models.CharField(db_column='LanguageName', max_length=20)),
            ],
            options={
                'db_table': 'languages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('totalamount', models.IntegerField(db_column='TotalAmount', default=None)),
                ('ordertype', models.CharField(db_column='OrderType', default=None, max_length=50)),
                ('paymentstatus', models.CharField(db_column='PaymentStatus', max_length=50)),
                ('totaltime', models.IntegerField(db_column='TotalTime', default=None)),
                ('discount', models.IntegerField(db_column='DiscountAmount', default=None)),
            ],
            options={
                'db_table': 'orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('packagename', models.CharField(db_column='PackageName', max_length=225)),
                ('packagedetail', models.CharField(db_column='PackageDetail', max_length=225)),
                ('packagecharges', models.IntegerField(db_column='PackageCharges', default=None)),
                ('packageduration', models.IntegerField(db_column='PackageDuration', default=None)),
                ('packagetype', models.CharField(db_column='PackageType', default=None, max_length=225)),
                ('packagecreationdate', models.DateTimeField(auto_now=True, db_column='CreatedDate')),
            ],
            options={
                'db_table': 'packages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SMSPackages',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('smspackagename', models.CharField(db_column='SMSPackageName', max_length=225)),
                ('smspackagedetail', models.CharField(db_column='SMSPackageDetail', max_length=225)),
                ('smspackagecharges', models.IntegerField(db_column='PackageCharges', default=None)),
                ('smspackageduration', models.CharField(db_column='SMSPackageDuration', max_length=225)),
                ('smspackagetype', models.CharField(db_column='SMSPackageType', default=None, max_length=225)),
                ('totalsms', models.IntegerField(db_column='TotalSMS', default=None)),
                ('packagecreationdate', models.DateTimeField(auto_now=True, db_column='CreatedDate')),
            ],
            options={
                'db_table': 'SMSPackages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Superadmin',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=50)),
                ('password', models.CharField(db_column='Password', max_length=50)),
                ('email', models.CharField(db_column='Email', max_length=50)),
            ],
            options={
                'db_table': 'superadmin',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='UserId', max_length=225)),
                ('displayname', models.CharField(db_column='DisplayName', max_length=225)),
                ('email', models.CharField(db_column='Email', max_length=225)),
                ('mobile', models.CharField(db_column='Mobile', max_length=30)),
                ('password', models.CharField(db_column='Password', max_length=20)),
                ('image', models.CharField(db_column='Image', max_length=50)),
                ('registerdate', models.DateTimeField(db_column='RegisterDate')),
                ('lastupdateddate', models.DateTimeField(db_column='LastUpdatedDate')),
                ('status', models.CharField(db_column='Status', max_length=20)),
                ('forgotpassword', models.CharField(db_column='ForgotPassword', max_length=10)),
                ('usertype', models.CharField(db_column='UserType', max_length=50)),
                ('balance', models.IntegerField(db_column='Balance', default=None)),
                ('expirydate', models.DateTimeField(db_column='ExpiryDate')),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('businessname', models.CharField(db_column='BusinessName', max_length=50)),
                ('businessemail', models.CharField(db_column='BusinessEmail', max_length=225)),
                ('businesscontact', models.CharField(db_column='BusinessContact', max_length=225)),
                ('industry', models.CharField(db_column='Industry', max_length=225)),
                ('systemname', models.CharField(db_column='SystemName', max_length=225)),
                ('businessaddress', models.TextField(db_column='BusinessAddress')),
                ('businesslogo', models.TextField(db_column='BusinessLogo')),
                ('businessicon', models.TextField(db_column='BusinessIcon')),
                ('heroicon', models.TextField(db_column='HeroIcon')),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'vendor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Venderorders',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'venderorders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.AutoField(db_column='tutorial_id', primary_key=True, serialize=False)),
                ('long_text', models.TextField(db_column='long_text')),
                ('feature_image', models.TextField(db_column='feature_image', max_length=255)),
                ('created_date', models.DateTimeField(db_column='created_date')),
                ('modified_date', models.DateTimeField(db_column='modified_date')),
                ('title', models.CharField(db_column='title', max_length=255)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'tutorial',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('mode', models.CharField(db_column='Mode', default=None, max_length=225)),
                ('amount', models.IntegerField(db_column='Amount', default=None)),
                ('date', models.DateTimeField(auto_now_add=True, db_column='Date')),
                ('memberid', models.IntegerField(db_column='Member')),
                ('waiterid', models.IntegerField(db_column='Waiter', default=None)),
                ('cashierid', models.IntegerField(db_column='Cashier', default=None)),
                ('discount', models.CharField(db_column='Discount', default='No Discount', max_length=225)),
                ('orderid', models.ForeignKey(db_column='OrderId', default=None, on_delete=django.db.models.deletion.CASCADE, to='unltd.Orders')),
            ],
            options={
                'db_table': 'transaction',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tables',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('tabletype', models.CharField(db_column='TableType', max_length=50)),
                ('tabledescription', models.CharField(db_column='TableDescription', default=None, max_length=225)),
                ('tablecapacity', models.IntegerField(db_column='TableCapacity')),
                ('availible', models.CharField(db_column='Availible', max_length=50)),
                ('qrcode', models.CharField(db_column='QRCode', default=None, max_length=225)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'tables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('subscriptiondate', models.DateTimeField(auto_now=True, db_column='SubscriptionDate')),
                ('expirydate', models.DateTimeField(auto_now=True, db_column='ExpiryDate')),
                ('autorenew', models.IntegerField(db_column='AutoRenew')),
                ('freetrail', models.IntegerField(db_column='FreeTrail')),
                ('expiryalert', models.IntegerField(db_column='ExpiryAlert')),
                ('renewconfirmation', models.IntegerField(db_column='RenewConfirmation')),
                ('packageid', models.ForeignKey(db_column='PackageId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Packages')),
                ('userid', models.ForeignKey(db_column='UserId', default=None, on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'subscription',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('subcategoryname', models.CharField(db_column='SubCategoryName', max_length=50)),
                ('timerange', models.DateTimeField(db_column='TimeRange')),
                ('creationddate', models.DateTimeField(auto_now=True, db_column='CreatedDate')),
                ('categoryid', models.ForeignKey(db_column='CategoryId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Category')),
            ],
            options={
                'db_table': 'subcategory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('privilege', models.CharField(db_column='Privilege', max_length=20)),
                ('department', models.CharField(db_column='Department', max_length=20)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'staff',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SMSSubscription',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('subscriptiondate', models.DateTimeField(auto_now=True, db_column='SubscriptionDate')),
                ('expirydate', models.DateTimeField(auto_now=True, db_column='ExpiryDate')),
                ('autorenew', models.IntegerField(db_column='AutoRenew')),
                ('freetrail', models.IntegerField(db_column='FreeTrail')),
                ('expiryalert', models.IntegerField(db_column='ExpiryAlert')),
                ('renewconfirmation', models.IntegerField(db_column='RenewConfirmation')),
                ('packageid', models.ForeignKey(db_column='PackageId', on_delete=django.db.models.deletion.CASCADE, to='unltd.SMSPackages')),
                ('userid', models.ForeignKey(db_column='UserId', default=None, on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'smssubscription',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RechargeHistory',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True, db_column='EventDate')),
                ('type', models.CharField(db_column='RechargeType', max_length=225)),
                ('amount', models.IntegerField(db_column='Amount', default=None)),
                ('purpose', models.CharField(db_column='RechergePurpose', default=None, max_length=225)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'rechargehistory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QASupport',
            fields=[
                ('question_id', models.AutoField(db_column='QuestionId', primary_key=True, serialize=False)),
                ('question_title', models.CharField(db_column='QuestionTitle', max_length=150)),
                ('question_text', models.CharField(db_column='QuestionText', max_length=250)),
                ('question_file', models.CharField(db_column='QuestionFile', max_length=250)),
                ('question_by', models.CharField(db_column='QuestionBy', max_length=150)),
                ('priority', models.CharField(db_column='Priority', max_length=50)),
                ('status', models.CharField(db_column='Status', max_length=50)),
                ('question_date', models.DateTimeField(db_column='QuestionDate')),
                ('read_question', models.IntegerField(db_column='ReadQuestion')),
                ('user_id', models.ForeignKey(db_column='Userid', default=None, on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'QASupports',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QAReplies',
            fields=[
                ('reply_id', models.AutoField(db_column='ReplyId', primary_key=True, serialize=False)),
                ('question_id', models.IntegerField(db_column='QuestionId')),
                ('reply_text', models.CharField(db_column='ReplyText', max_length=250)),
                ('reply_file', models.CharField(db_column='ReplyFile', max_length=150)),
                ('reply_by', models.CharField(db_column='ReplyBy', max_length=150)),
                ('reply_date', models.DateTimeField(db_column='ReplyDate')),
                ('read_reply', models.IntegerField(db_column='ReadReply')),
                ('user_id', models.ForeignKey(db_column='Userid', default=None, on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'QAReplies',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='orders',
            name='memberid',
            field=models.ForeignKey(db_column='MemberId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User'),
        ),
        migrations.AddField(
            model_name='orders',
            name='vendorid',
            field=models.ForeignKey(db_column='VendorId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Venderorders'),
        ),
        migrations.CreateModel(
            name='Messagesender',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'messagesender',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('messagehead', models.CharField(db_column='MessageHead', max_length=225)),
                ('messagebody', models.CharField(db_column='MessageBody', max_length=225)),
                ('eventdate', models.DateTimeField(auto_now_add=True, db_column='EventDate')),
                ('type', models.CharField(db_column='Type', max_length=20)),
                ('receiverid', models.ForeignKey(db_column='ReceiverId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
                ('senderid', models.ForeignKey(db_column='SenderId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Messagesender')),
            ],
            options={
                'db_table': 'messages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('menuid', models.IntegerField(db_column='MenuId', default=None)),
                ('name', models.CharField(db_column='Name', default=None, max_length=225)),
                ('type', models.CharField(db_column='Type', max_length=50)),
                ('itemid', models.ForeignKey(db_column='ItemId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Item')),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'menu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('packageid', models.ForeignKey(db_column='PackageId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Subscription')),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'membership',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('sr_no', models.AutoField(db_column='Sr_No', primary_key=True, serialize=False)),
                ('dateofbirth', models.DateTimeField(db_column='DateOfBirth')),
                ('gender', models.CharField(db_column='Gender', max_length=10)),
                ('qrcode', models.TextField(db_column='QRCode')),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'member',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('address', models.CharField(db_column='Address', max_length=225)),
                ('city', models.CharField(max_length=20)),
                ('postcode', models.IntegerField(db_column='PostCode', default=0)),
                ('state', models.CharField(db_column='State', max_length=20)),
                ('country', models.CharField(db_column='Country', max_length=20)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemVariation',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.CharField(db_column='Description', max_length=255)),
                ('discount', models.IntegerField(db_column='Discount', default=None)),
                ('price', models.IntegerField(db_column='Price', default=None)),
                ('itemid', models.ForeignKey(db_column='ItemId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Item')),
            ],
            options={
                'db_table': 'ItemVariation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itemorder',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('itemname', models.CharField(db_column='ItemName', max_length=225)),
                ('itemvariation', models.CharField(db_column='VariationName', default=None, max_length=225)),
                ('itemprice', models.IntegerField(db_column='ItemPrice', default=None)),
                ('itemquantity', models.IntegerField(db_column='ItemQuantity', default=None)),
                ('total', models.IntegerField(db_column='Total', default=None)),
                ('orderdate', models.DateTimeField(auto_now=True, db_column='OrderDate')),
                ('oderid', models.ForeignKey(db_column='OderId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Orders')),
            ],
            options={
                'db_table': 'itemorder',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itemofferoptions',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('customoffer', models.CharField(db_column='CustomOffer', max_length=225)),
                ('price', models.IntegerField(db_column='Price', default=None)),
                ('timerange', models.DateTimeField(db_column='TimeRange')),
                ('itemid', models.ForeignKey(db_column='ItemId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Item')),
            ],
            options={
                'db_table': 'itemofferoptions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itemdisplay',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('displaytype', models.CharField(db_column='DisplayType', max_length=50)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'itemdisplay',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='item',
            name='itemdisplayid',
            field=models.ForeignKey(db_column='ItemDisplayId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Itemdisplay'),
        ),
        migrations.AddField(
            model_name='item',
            name='subcategoryid',
            field=models.ForeignKey(db_column='SubCategoryId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Subcategory'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('source', models.CharField(db_column='Source', max_length=50)),
                ('itemid', models.ForeignKey(db_column='ItemId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Item')),
            ],
            options={
                'db_table': 'images',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('memberid', models.AutoField(db_column='MemberId', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='Email', max_length=225)),
                ('group_id', models.ForeignKey(db_column='GroupId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Group')),
                ('userid', models.ForeignKey(blank=True, db_column='UserId', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'GroupMember',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='group',
            name='userid',
            field=models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User'),
        ),
        migrations.CreateModel(
            name='GeneralSetting',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('language', models.CharField(db_column='Language', max_length=225)),
                ('currency', models.CharField(db_column='Currency', max_length=225)),
                ('userid', models.ForeignKey(db_column='UserId', default=None, on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'GeneralSetting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Developersuse',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('tag', models.TextField(db_column='Tag')),
                ('notes', models.TextField(db_column='Notes')),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'developersuse',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='category',
            name='userid',
            field=models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User'),
        ),
        migrations.CreateModel(
            name='BroadCastEventMessages',
            fields=[
                ('msgid', models.AutoField(db_column='MessageId', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.TextField(db_column='Description')),
                ('type', models.CharField(db_column='Type', max_length=255)),
                ('msgtype', models.CharField(db_column='MessageType', max_length=255)),
                ('status', models.CharField(db_column='Status', max_length=255)),
                ('senderid', models.ForeignKey(db_column='SenderId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'BroadCastEventMessages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(db_column='DateTime')),
                ('status', models.CharField(db_column='Status', max_length=50)),
                ('tableid', models.ForeignKey(db_column='TableId', on_delete=django.db.models.deletion.CASCADE, to='unltd.Tables')),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'booking',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('apiaccesskey', models.CharField(db_column='ApiAccessKey', max_length=50)),
                ('apisecretkey', models.CharField(db_column='ApiSecretKey', max_length=50)),
                ('apiname', models.CharField(db_column='ApiName', max_length=50)),
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='unltd.User')),
            ],
            options={
                'db_table': 'api',
                'managed': True,
            },
        ),
    ]
